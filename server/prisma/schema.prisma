// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


//회원가입
model User{
  userId Int @id @default(autoincrement())
  email String
  password String
  name String
  created_at DateTime @default(now())
  Address String
  birth String
  gender Gender

  profile Profile[]
  progress Progress[]
  sentRequests   Request[] @relation("Sender")
  receivedRequests Request[] @relation("Receiver")

  
  
}

//사회복지사
model Profile{
  profileId Int @id @default(autoincrement())
  userId Int
  profileImg String 
  proofImg String
  proofInfo String
  phoneNum String
  created_at DateTime @default(now())

  user User @relation(fields: [userId] , references: [userId])
}

//환자
model PatientApply{
  applyId Int @id @default(autoincrement())
  serviceSelect Service @default(HOMEHOSPITALHOME)
  serviceTime DateTime
  applyDate DateTime @default(now())
  whereInfo String
  HowInfo String
  
}


model Request{
  requestId Int @id @default(autoincrement())
  status Req @default(Pending)
  senderId Int
  receiverId Int

  sender User @relation("Sender",fields: [senderId], references: [userId])
  receiver User @relation("Receiver", fields: [receiverId], references: [userId])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  progress Progress[]
}

model Progress{
  progressId Int @id @default(autoincrement())
  userId Int 
  requestId Int
  status Status @default(Start)
  updated_at DateTime @updatedAt

  request Request @relation(fields: [requestId], references: [requestId])  
  user User @relation(fields: [userId], references: [userId])

}

enum Gender{
  MALE
  FEMALE
}

enum Service{
  HOMEHOSPITALHOME
  HOMEHOSPITAL
  HOSPITALHOME
  HOSPITALONLY
}

enum Req{
  Pending
  Accepted
  Declined
}

enum Status{
  Start
  Hospital
  Finish
}


